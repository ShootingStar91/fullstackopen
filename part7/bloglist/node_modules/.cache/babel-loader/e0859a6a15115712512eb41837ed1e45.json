{"ast":null,"code":"import blogService from '../services/blogs';\nexport const addBlog = content => {\n  return async dispatch => {\n    const newBlog = await blogService.postBlog(content);\n    dispatch({\n      type: 'ADD_BLOG',\n      data: newBlog\n    });\n  };\n};\nexport const initBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll();\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs\n    });\n  };\n};\n\nconst blogReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_BLOG':\n      return [...state, action.data];\n\n    case 'INIT_BLOGS':\n      return action.data;\n\n    default:\n      return state;\n  }\n};\n\nexport default blogReducer;","map":{"version":3,"sources":["/home/arttu/devaus/fullstackopen/part7/bloglist/src/reducers/blogReducer.js"],"names":["blogService","addBlog","content","dispatch","newBlog","postBlog","type","data","initBlogs","blogs","getAll","blogReducer","state","action"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AAEA,OAAO,MAAMC,OAAO,GAAIC,OAAD,IAAa;AAClC,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,OAAO,GAAG,MAAMJ,WAAW,CAACK,QAAZ,CAAqBH,OAArB,CAAtB;AACAC,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,UADC;AAEPC,MAAAA,IAAI,EAAEH;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;AAUP,OAAO,MAAMI,SAAS,GAAG,MAAM;AAC7B,SAAO,MAAML,QAAN,IAAkB;AACvB,UAAMM,KAAK,GAAG,MAAMT,WAAW,CAACU,MAAZ,EAApB;AACAP,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,IAAI,EAAEE;AAFC,KAAD,CAAR;AAID,GAND;AAOD,CARM;;AAcP,MAAME,WAAW,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC1C,UAAQA,MAAM,CAACP,IAAf;AACA,SAAK,UAAL;AACE,aAAO,CAAC,GAAGM,KAAJ,EAAWC,MAAM,CAACN,IAAlB,CAAP;;AACF,SAAK,YAAL;AACE,aAAOM,MAAM,CAACN,IAAd;;AACF;AACE,aAAOK,KAAP;AANF;AAQD,CATD;;AAWA,eAAeD,WAAf","sourcesContent":["import blogService from '../services/blogs'\n\nexport const addBlog = (content) => {\n  return async dispatch => {\n    const newBlog = await blogService.postBlog(content)\n    dispatch({\n      type: 'ADD_BLOG',\n      data: newBlog\n    })\n  }\n}\n\nexport const initBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: blogs\n    })\n  }\n}\n\n\n\n\n\nconst blogReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'ADD_BLOG':\n    return [...state, action.data]\n  case 'INIT_BLOGS':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport default blogReducer"]},"metadata":{},"sourceType":"module"}