{"ast":null,"code":"const seconds = 10;\nexport const triggerSuccess = msg => {\n  console.log('trigger success called');\n  return async dispatch => {\n    const id = setTimeout(() => {\n      dispatch({\n        type: 'EMPTY_SUCCESS'\n      });\n    }, seconds * 1000);\n    dispatch({\n      type: 'SET_SUCCESS',\n      data: {\n        msg: msg,\n        success_id: id\n      }\n    });\n  };\n};\nexport const triggerError = msg => {\n  console.log('trigger error called');\n  return async dispatch => {\n    const id = setTimeout(() => {\n      dispatch({\n        type: 'EMPTY_ERROR'\n      });\n    }, seconds * 1000);\n    dispatch({\n      type: 'SET_ERROR',\n      data: {\n        msg: msg,\n        error_id: id\n      }\n    });\n  };\n};\nexport const emptySuccess = () => {\n  return {\n    type: 'EMPTY_SUCCESS'\n  };\n};\nexport const emptyError = () => {\n  return {\n    type: 'EMPTY_ERROR'\n  };\n};\n\nconst notificationReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    success_msg: '',\n    error_msg: '',\n    success_timeout_id: null,\n    error_timeout_id: null\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('notificationReducer STATE: ', state, ' ACTION: ', action);\n\n  switch (action.type) {\n    case 'SET_SUCCESS':\n      if (state.success_id) {\n        clearTimeout(state.success_id);\n      }\n\n      return {\n        success_msg: action.data.msg,\n        success_timeout_id: action.data.success_id,\n        error_msg: state.error_msg,\n        error_timeout_id: state.error_timeout_id\n      };\n\n    case 'SET_ERROR':\n      if (state.error_id) {\n        clearTimeout(state.error_id);\n      }\n\n      return {\n        error_msg: action.data.msg,\n        error_timeout_id: action.data.error_id,\n        success_msg: state.success_msg,\n        success_timeout_id: state.error_timeout_id\n      };\n\n    case 'EMPTY_SUCCESS':\n      return {\n        success_timeout_id: null,\n        success_msg: '',\n        error_msg: state.error_msg,\n        error_timeout_id: state.error_timeout_id\n      };\n\n    case 'EMPTY_ERROR':\n      return {\n        error_timeout_id: null,\n        error_msg: '',\n        success_msg: state.success_msg,\n        success_timeout_id: state.success_timeout_id\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default notificationReducer;","map":{"version":3,"sources":["/home/arttu/devaus/fullstackopen/part7/bloglist/src/reducers/notificationReducer.js"],"names":["seconds","triggerSuccess","msg","console","log","dispatch","id","setTimeout","type","data","success_id","triggerError","error_id","emptySuccess","emptyError","notificationReducer","state","success_msg","error_msg","success_timeout_id","error_timeout_id","action","clearTimeout"],"mappings":"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","sourcesContent":["const seconds = 10\n\nexport const triggerSuccess = (msg) => {\n  console.log('trigger success called')\n  return async dispatch => {\n\n    const id = setTimeout(() => {\n      dispatch({ type: 'EMPTY_SUCCESS' })\n    }, seconds * 1000)\n\n    dispatch({ type: 'SET_SUCCESS',\n      data: {\n        msg: msg,\n        success_id: id\n      }\n    })\n\n  }\n\n}\n\nexport const triggerError = (msg) => {\n  console.log('trigger error called')\n\n  return async dispatch => {\n\n    const id = setTimeout(() => {\n      dispatch({ type: 'EMPTY_ERROR' })\n    }, seconds * 1000)\n\n    dispatch({ type: 'SET_ERROR',\n      data: {\n        msg: msg,\n        error_id: id\n      }\n    })\n\n  }\n\n}\n\n\nexport const emptySuccess = () => {\n  return {\n    type: 'EMPTY_SUCCESS'\n  }\n}\n\n\nexport const emptyError = () => {\n  return {\n    type: 'EMPTY_ERROR'\n  }\n}\n\n\n\n\n\nconst notificationReducer = (state = { success_msg: '',\n  error_msg: '', success_timeout_id: null, error_timeout_id: null }, action) => {\n  console.log('notificationReducer STATE: ', state, ' ACTION: ', action)\n  switch (action.type) {\n  case 'SET_SUCCESS':\n    if (state.success_id) {\n      clearTimeout(state.success_id)\n    }\n    return { success_msg: action.data.msg, success_timeout_id: action.data.success_id,\n      error_msg: state.error_msg, error_timeout_id: state.error_timeout_id }\n  case 'SET_ERROR':\n    if (state.error_id) {\n      clearTimeout(state.error_id)\n    }\n    return { error_msg: action.data.msg, error_timeout_id: action.data.error_id,\n      success_msg: state.success_msg, success_timeout_id: state.error_timeout_id }\n  case 'EMPTY_SUCCESS':\n    return { success_timeout_id: null, success_msg: '', error_msg: state.error_msg, error_timeout_id: state.error_timeout_id }\n  case 'EMPTY_ERROR':\n    return { error_timeout_id: null, error_msg: '', success_msg: state.success_msg, success_timeout_id: state.success_timeout_id }\n  default:\n    return state\n  }\n}\n\n\n\n\n\n\n\n\n\nexport default notificationReducer\n\n\n\n"]},"metadata":{},"sourceType":"module"}