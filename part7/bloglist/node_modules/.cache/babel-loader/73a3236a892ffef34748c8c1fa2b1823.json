{"ast":null,"code":"var _jsxFileName = \"/home/arttu/devaus/fullstackopen/part7/bloglist/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Blog from './components/Blog';\nimport BlogForm from './components/BlogForm';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport { triggerError, triggerSuccess } from './reducers/notificationReducer';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShowErrormsg = _ref => {\n  let {\n    message\n  } = _ref;\n\n  if (message === null || message === '') {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"error-notification\",\n    className: \"error\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n\n_c = ShowErrormsg;\n\nconst ShowSuccessmsg = _ref2 => {\n  let {\n    message\n  } = _ref2;\n\n  if (message === null || message === '') {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"success-notification\",\n    className: \"success\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = ShowSuccessmsg;\n\nconst LoginPage = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login to bloglist app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: props.tryLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username \", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          onChange: props.handleUsernameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Password \", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          onChange: props.handlePasswordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"login-button\",\n          type: \"submit\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = LoginPage;\n\nconst RawApp = props => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const notification = useSelector(state => state);\n  const [blogFormVisible, setBlogFormVisible] = useState(false);\n\n  const refreshBlogs = () => {\n    blogService.getAll().then(blogs => {\n      blogs.sort((first, second) => {\n        if (first.likes > second.likes) {\n          return -1;\n        } else if (first.likes < second.likes) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n      setBlogs(blogs);\n    });\n  };\n\n  useEffect(() => {\n    refreshBlogs();\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const tryLogin = async event => {\n    event.preventDefault();\n    console.log('Attempting to log in...');\n\n    try {\n      const user = await loginService.tryLogin(username, password);\n      blogService.setToken(user.token);\n      setUser(user);\n      window.localStorage.setItem('loggedUser', JSON.stringify(user));\n      triggerSuccess('Login successful');\n    } catch (exception) {\n      triggerError('Login failed');\n    }\n  };\n\n  const tryLogout = async () => {\n    window.localStorage.removeItem('loggedUser');\n    setUser(null);\n    triggerSuccess('Logged out.');\n  };\n\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const submitBlog = async (title, author, url) => {\n    try {\n      await blogService.postBlog(title, author, url);\n      triggerSuccess('New blog posted successfully');\n      refreshBlogs();\n      setBlogFormVisible(false);\n    } catch (exception) {\n      if (exception.response.status === 400) {\n        props.triggerError('Could not post blog. Title and url are required!');\n      } else if (exception.response.status === 401) {\n        props.triggerError('Invalid login token. Please logout and then login again.');\n      } else {\n        props.triggerError('Could not post blog. Error unknown.');\n      }\n    }\n  };\n\n  const likeButtonClicked = blog => {\n    try {\n      blogService.likeBlog(blog.id, blog.likes);\n      refreshBlogs();\n      triggerSuccess('Liked blog');\n    } catch (exception) {\n      triggerError('Error with like button');\n      console.log(exception.response);\n    }\n  };\n\n  const deleteButtonClicked = async blog => {\n    if (!window.confirm('Are you sure you want to delete: ' + blog.title)) return;\n\n    try {\n      await blogService.deleteBlog(blog.id);\n      refreshBlogs();\n      triggerSuccess('Blog deleted');\n    } catch (exception) {\n      triggerError('Error with deleting blog');\n    }\n  };\n\n  const loginPage = () => {\n    return /*#__PURE__*/_jsxDEV(LoginPage, {\n      tryLogin: tryLogin,\n      handleUsernameChange: handleUsernameChange,\n      handlePasswordChange: handlePasswordChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  };\n\n  const loggedInPage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Blogs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [user.name, \" is logged in. \", /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"logout-button\",\n            onClick: tryLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n          blog: blog,\n          likeButtonClicked: likeButtonClicked,\n          deleteButtonClicked: deleteButtonClicked\n        }, blog.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this), blogFormVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(BlogForm, {\n          postBlog: submitBlog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setBlogFormVisible(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"show-blog-form-button\",\n          onClick: () => setBlogFormVisible(true),\n          children: \"Add new blog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ShowErrormsg, {\n      message: notification.error_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShowSuccessmsg, {\n      message: notification.success_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), user === null ? loginPage() : loggedInPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RawApp, \"IcLaKK06ouPQDiGQRLQ5eFnRP+I=\", false, function () {\n  return [useSelector];\n});\n\n_c4 = RawApp;\n\nconst mapStateToProps = state => {\n  return {\n    notification: state\n  };\n};\n\nconst App = connect(mapStateToProps, {\n  triggerSuccess,\n  triggerError\n})(RawApp);\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ShowErrormsg\");\n$RefreshReg$(_c2, \"ShowSuccessmsg\");\n$RefreshReg$(_c3, \"LoginPage\");\n$RefreshReg$(_c4, \"RawApp\");","map":{"version":3,"sources":["/home/arttu/devaus/fullstackopen/part7/bloglist/src/App.js"],"names":["React","useState","useEffect","useSelector","Blog","BlogForm","blogService","loginService","triggerError","triggerSuccess","connect","ShowErrormsg","message","ShowSuccessmsg","LoginPage","props","tryLogin","handleUsernameChange","handlePasswordChange","RawApp","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","notification","state","blogFormVisible","setBlogFormVisible","refreshBlogs","getAll","then","sort","first","second","likes","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","event","preventDefault","console","log","setItem","stringify","exception","tryLogout","removeItem","target","value","submitBlog","title","author","url","postBlog","response","status","likeButtonClicked","blog","likeBlog","id","deleteButtonClicked","confirm","deleteBlog","loginPage","loggedInPage","name","map","error_msg","success_msg","mapStateToProps","App"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport { triggerError, triggerSuccess } from './reducers/notificationReducer'\nimport { connect } from 'react-redux'\n\nconst ShowErrormsg = ({ message }) => {\n  if (message === null || message === '') {\n    return null\n  }\n  return <div id='error-notification' className=\"error\">{message}</div>\n}\n\nconst ShowSuccessmsg = ( { message } ) => {\n  if (message === null || message === '') {\n    return null\n  }\n  return <div id='success-notification' className=\"success\">{message}</div>\n}\n\nconst LoginPage = (props) => {\n  return (\n    <div>\n      <h2>Login to bloglist app</h2>\n      <form onSubmit={props.tryLogin}>\n        <p>Username <input id=\"username\" onChange={props.handleUsernameChange} />\n        </p>\n        <p>\n          Password <input id=\"password\" type=\"password\" onChange={props.handlePasswordChange} />\n        </p>\n        <p>\n          <button id=\"login-button\" type=\"submit\">Log in</button>\n        </p>\n      </form>\n    </div>\n  )\n}\n\nconst RawApp = (props) => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const notification = useSelector(state => state)\n\n\n  const [blogFormVisible, setBlogFormVisible] = useState(false)\n\n  const refreshBlogs = () => {\n    blogService.getAll().then(blogs => {\n      blogs.sort((first, second) => {\n        if(first.likes > second.likes) {\n          return -1\n        } else if (first.likes < second.likes) {\n          return 1\n        } else {\n          return 0\n        }\n      })\n      setBlogs( blogs )\n    })\n  }\n  useEffect(() => {\n    refreshBlogs()\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const tryLogin = async (event) => {\n    event.preventDefault()\n    console.log('Attempting to log in...')\n    try {\n      const user = await loginService.tryLogin(username, password)\n      blogService.setToken(user.token)\n\n      setUser(user)\n      window.localStorage.setItem('loggedUser', JSON.stringify(user))\n      triggerSuccess('Login successful')\n    } catch (exception) {\n      triggerError('Login failed')\n    }\n  }\n\n  const tryLogout = async () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n    triggerSuccess('Logged out.')\n  }\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const submitBlog = async (title, author, url) => {\n    try {\n      await blogService.postBlog(title, author, url)\n      triggerSuccess('New blog posted successfully')\n      refreshBlogs()\n      setBlogFormVisible(false)\n    } catch (exception) {\n      if (exception.response.status === 400) {\n        props.triggerError('Could not post blog. Title and url are required!')\n      } else if (exception.response.status === 401) {\n        props.triggerError('Invalid login token. Please logout and then login again.')\n      } else {\n        props.triggerError('Could not post blog. Error unknown.')\n      }\n    }\n\n  }\n\n  const likeButtonClicked = (blog) => {\n\n    try {\n      blogService.likeBlog(blog.id, blog.likes)\n      refreshBlogs()\n      triggerSuccess('Liked blog')\n    } catch (exception) {\n      triggerError('Error with like button')\n      console.log(exception.response)\n    }\n  }\n\n  const deleteButtonClicked = async (blog) => {\n    if (!window.confirm(\n      'Are you sure you want to delete: ' + blog.title\n    )\n    ) return\n    try {\n      await blogService.deleteBlog(blog.id)\n      refreshBlogs()\n\n      triggerSuccess('Blog deleted')\n    } catch (exception) {\n      triggerError('Error with deleting blog')\n    }\n  }\n\n  const loginPage = () => {\n    return (\n      <LoginPage\n        tryLogin={tryLogin}\n        handleUsernameChange={handleUsernameChange}\n        handlePasswordChange={handlePasswordChange} />)\n  }\n\n\n\n  const loggedInPage = () => {\n    return (<div>\n      <div>\n        <h2>Blogs</h2>\n        <p>{user.name} is logged in. <button id='logout-button' onClick={tryLogout}>Logout</button></p>\n        {blogs.map(blog =>\n          <Blog key={blog.id} blog={blog} likeButtonClicked={likeButtonClicked}\n            deleteButtonClicked={deleteButtonClicked} />\n        )}\n      </div>\n      {\n        blogFormVisible ? <div><BlogForm postBlog={submitBlog}/>\n          <p>\n            <button onClick={() => setBlogFormVisible(false)}>\n            Cancel\n            </button>\n          </p>\n        </div> :\n          <div>\n            <br/>\n            <br/>\n            <button id='show-blog-form-button' onClick={() => setBlogFormVisible(true)}>\n          Add new blog\n            </button>\n          </div>\n      }\n    </div>)\n  }\n\n\n\n  return (\n    <div>\n      <ShowErrormsg message={notification.error_msg} />\n      <ShowSuccessmsg message={notification.success_msg} />\n      {user === null ?\n        loginPage() :\n        loggedInPage() }\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state\n  }\n}\n\nconst App = connect(mapStateToProps, { triggerSuccess, triggerError })(RawApp)\n\nexport default App"]},"metadata":{},"sourceType":"module"}