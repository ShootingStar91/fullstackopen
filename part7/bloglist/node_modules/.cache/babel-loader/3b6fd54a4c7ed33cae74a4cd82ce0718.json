{"ast":null,"code":"import { triggerSuccess, triggerError } from './notificationReducer';\nimport blogService from '../services/blogs';\nimport loginService from '../services/login';\nexport const checkLogin = () => {\n  return async dispatch => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      console.log('Found logged in with info ', loggedUserJSON);\n      dispatch({\n        type: 'SET_USER',\n        data: user\n      });\n    }\n  };\n};\nexport const logout = () => {\n  return async dispatch => {\n    window.localStorage.removeItem('loggedUser');\n    dispatch({\n      type: 'LOGOUT_USER',\n      data: null\n    });\n    dispatch(triggerSuccess('Logged out'));\n  };\n};\nexport const tryLogin = (username, password) => {\n  return async dispatch => {\n    try {\n      console.log('TRYING LOGIN IN ACTION CREATOR');\n      const user = await loginService.tryLogin(username, password);\n      blogService.setToken(user.token);\n      dispatch({\n        type: 'SET_USER',\n        data: user\n      });\n      window.localStorage.setItem('loggedUser', JSON.stringify(user));\n      dispatch(triggerSuccess('Login successful'));\n    } catch (exception) {\n      dispatch(triggerError('Login failed'));\n    }\n  };\n};\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('userReducer:');\n  console.log(state, action);\n\n  switch (action.type) {\n    case 'SET_USER':\n      return action.data;\n\n    case 'LOGOUT_USER':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/home/arttu/devaus/fullstackopen/part7/bloglist/src/reducers/userReducer.js"],"names":["triggerSuccess","triggerError","blogService","loginService","checkLogin","dispatch","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","console","log","type","data","logout","removeItem","tryLogin","username","password","setToken","token","setItem","stringify","exception","userReducer","state","action"],"mappings":"AACA,SAASA,cAAT,EAAyBC,YAAzB,QAA6C,uBAA7C;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,cAAc,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAAvB;;AACA,QAAIH,cAAJ,EAAoB;AAClB,YAAMI,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWN,cAAX,CAAb;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CR,cAA1C;AACAD,MAAAA,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,IAAI,EAAEN;AAA1B,OAAD,CAAR;AACD;AACF,GAPD;AAQD,CATM;AAWP,OAAO,MAAMO,MAAM,GAAG,MAAM;AAC1B,SAAO,MAAMZ,QAAN,IAAkB;AACvBE,IAAAA,MAAM,CAACC,YAAP,CAAoBU,UAApB,CAA+B,YAA/B;AACAb,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,IAAI,EAAE;AAA7B,KAAD,CAAR;AACAX,IAAAA,QAAQ,CAACL,cAAc,CAAC,YAAD,CAAf,CAAR;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMmB,QAAQ,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC9C,SAAO,MAAMhB,QAAN,IAAkB;AACvB,QAAI;AACFQ,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACA,YAAMJ,IAAI,GAAG,MAAMP,YAAY,CAACgB,QAAb,CAAsBC,QAAtB,EAAgCC,QAAhC,CAAnB;AACAnB,MAAAA,WAAW,CAACoB,QAAZ,CAAqBZ,IAAI,CAACa,KAA1B;AACAlB,MAAAA,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,IAAI,EAAEN;AAA1B,OAAD,CAAR;AACAH,MAAAA,MAAM,CAACC,YAAP,CAAoBgB,OAApB,CAA4B,YAA5B,EAA0Cb,IAAI,CAACc,SAAL,CAAef,IAAf,CAA1C;AACAL,MAAAA,QAAQ,CAACL,cAAc,CAAC,kBAAD,CAAf,CAAR;AACD,KAPD,CAOE,OAAO0B,SAAP,EAAkB;AAClBrB,MAAAA,QAAQ,CAACJ,YAAY,CAAC,cAAD,CAAb,CAAR;AACD;AACF,GAXD;AAYD,CAbM;;AAmBP,MAAM0B,WAAW,GAAG,YAA0B;AAAA,MAAzBC,KAAyB,uEAAjB,IAAiB;AAAA,MAAXC,MAAW;AAC5ChB,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ,EAAmBC,MAAnB;;AACA,UAAQA,MAAM,CAACd,IAAf;AACA,SAAK,UAAL;AACE,aAAOc,MAAM,CAACb,IAAd;;AACF,SAAK,aAAL;AACE,aAAO,IAAP;;AACF;AACE,aAAOY,KAAP;AANF;AASD,CAZD;;AAcA,eAAeD,WAAf","sourcesContent":["\nimport { triggerSuccess, triggerError } from './notificationReducer'\nimport blogService from '../services/blogs'\nimport loginService from '../services/login'\n\nexport const checkLogin = () => {\n  return async dispatch => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      console.log('Found logged in with info ', loggedUserJSON)\n      dispatch({ type: 'SET_USER', data: user })\n    }\n  }\n}\n\nexport const logout = () => {\n  return async dispatch => {\n    window.localStorage.removeItem('loggedUser')\n    dispatch({ type: 'LOGOUT_USER', data: null })\n    dispatch(triggerSuccess('Logged out'))\n  }\n}\n\nexport const tryLogin = (username, password) => {\n  return async dispatch => {\n    try {\n      console.log('TRYING LOGIN IN ACTION CREATOR')\n      const user = await loginService.tryLogin(username, password)\n      blogService.setToken(user.token)\n      dispatch({ type: 'SET_USER', data: user })\n      window.localStorage.setItem('loggedUser', JSON.stringify(user))\n      dispatch(triggerSuccess('Login successful'))\n    } catch (exception) {\n      dispatch(triggerError('Login failed'))\n    }\n  }\n}\n\n\n\n\n\nconst userReducer = (state = null, action) => {\n  console.log('userReducer:')\n  console.log(state, action)\n  switch (action.type) {\n  case 'SET_USER':\n    return action.data\n  case 'LOGOUT_USER':\n    return null\n  default:\n    return state\n  }\n\n}\n\nexport default userReducer\n"]},"metadata":{},"sourceType":"module"}