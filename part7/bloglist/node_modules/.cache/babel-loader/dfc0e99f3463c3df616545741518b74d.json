{"ast":null,"code":"export const triggerSuccess = (msg, seconds) => {\n  return async dispatch => {\n    const id = setTimeout(() => {\n      dispatch({\n        type: 'EMPTY_SUCCESS'\n      });\n    }, seconds * 1000);\n    dispatch({\n      type: 'SET_SUCCESS',\n      data: {\n        msg: msg,\n        id: id\n      }\n    });\n  };\n};\nexport const triggerError = (msg, seconds) => {\n  return async dispatch => {\n    const id = setTimeout(() => {\n      dispatch({\n        type: 'EMPTY_ERROR'\n      });\n    }, seconds * 1000);\n    dispatch({\n      type: 'SET_ERROR',\n      data: {\n        msg: msg,\n        id: id\n      }\n    });\n  };\n};\nexport const emptySuccess = () => {\n  return {\n    type: 'EMPTY_SUCCESS'\n  };\n};\nexport const emptyError = () => {\n  return {\n    type: 'EMPTY_ERROR'\n  };\n};\n\nconst notificationReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    success_msg: 'Initial notification',\n    error_msg: 'Initial notification',\n    success_timeout_id: null,\n    error_timeout_id: null\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //console.log(\"notificationReducer STATE: \", state, \" ACTION: \", action)\n  switch (action.type) {\n    case 'SET_SUCCESS':\n      if (state.id) {\n        clearTimeout(state.id);\n      }\n\n      return {\n        success_msg: action.data.msg,\n        success_timeout_id: action.data.id,\n        error_msg: state.error_msg,\n        error_timeout_id: state.error_timeout_id\n      };\n\n    case 'SET_ERROR':\n      if (state.id) {\n        clearTimeout(state.id);\n      }\n\n      return {\n        error_msg: action.data.msg,\n        error_timeout_id: action.data.id,\n        success_msg: state.error_msg,\n        success_timeout_id: state.error_timeout_id\n      };\n\n    case 'EMPTY_SUCCESS':\n      return {\n        success_timeout_id: null,\n        success_msg: ''\n      };\n\n    case 'EMPTY_ERROR':\n      return {\n        error_timeout_id: null,\n        error_msg: ''\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default notificationReducer;","map":{"version":3,"sources":["/home/arttu/devaus/fullstackopen/part7/bloglist/src/reducers/notificationReducer.js"],"names":["triggerSuccess","msg","seconds","dispatch","id","setTimeout","type","data","triggerError","emptySuccess","emptyError","notificationReducer","state","success_msg","error_msg","success_timeout_id","error_timeout_id","action","clearTimeout"],"mappings":"AAEA,OAAO,MAAMA,cAAc,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAE9C,SAAO,MAAMC,QAAN,IAAkB;AAEvB,UAAMC,EAAE,GAAGC,UAAU,CAAC,MAAM;AAC1BF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAFoB,EAElBJ,OAAO,GAAG,IAFQ,CAArB;AAIAC,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,aAAR;AACPC,MAAAA,IAAI,EAAE;AACJN,QAAAA,GAAG,EAAEA,GADD;AAEJG,QAAAA,EAAE,EAAEA;AAFA;AADC,KAAD,CAAR;AAOD,GAbD;AAeD,CAjBM;AAmBP,OAAO,MAAMI,YAAY,GAAG,CAACP,GAAD,EAAMC,OAAN,KAAkB;AAE5C,SAAO,MAAMC,QAAN,IAAkB;AAEvB,UAAMC,EAAE,GAAGC,UAAU,CAAC,MAAM;AAC1BF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAFoB,EAElBJ,OAAO,GAAG,IAFQ,CAArB;AAIAC,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,WAAR;AACPC,MAAAA,IAAI,EAAE;AACJN,QAAAA,GAAG,EAAEA,GADD;AAEJG,QAAAA,EAAE,EAAEA;AAFA;AADC,KAAD,CAAR;AAOD,GAbD;AAeD,CAjBM;AAoBP,OAAO,MAAMK,YAAY,GAAE,MAAM;AAC/B,SAAO;AACLH,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAOP,OAAO,MAAMI,UAAU,GAAE,MAAM;AAC7B,SAAO;AACLJ,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;;AAUP,MAAMK,mBAAmB,GAAG,YACwE;AAAA,MADvEC,KACuE,uEAD/D;AAAEC,IAAAA,WAAW,EAAE,sBAAf;AACnCC,IAAAA,SAAS,EAAE,sBADwB;AACAC,IAAAA,kBAAkB,EAAE,IADpB;AAC0BC,IAAAA,gBAAgB,EAAE;AAD5C,GAC+D;AAAA,MAAXC,MAAW;;AAClG;AACA,UAAQA,MAAM,CAACX,IAAf;AACA,SAAK,aAAL;AACE,UAAIM,KAAK,CAACR,EAAV,EAAc;AACZc,QAAAA,YAAY,CAACN,KAAK,CAACR,EAAP,CAAZ;AACD;;AACD,aAAO;AAAES,QAAAA,WAAW,EAAEI,MAAM,CAACV,IAAP,CAAYN,GAA3B;AAAgCc,QAAAA,kBAAkB,EAAEE,MAAM,CAACV,IAAP,CAAYH,EAAhE;AACLU,QAAAA,SAAS,EAAEF,KAAK,CAACE,SADZ;AACuBE,QAAAA,gBAAgB,EAAEJ,KAAK,CAACI;AAD/C,OAAP;;AAEF,SAAK,WAAL;AACE,UAAIJ,KAAK,CAACR,EAAV,EAAc;AACZc,QAAAA,YAAY,CAACN,KAAK,CAACR,EAAP,CAAZ;AACD;;AACD,aAAO;AAAEU,QAAAA,SAAS,EAAEG,MAAM,CAACV,IAAP,CAAYN,GAAzB;AAA8Be,QAAAA,gBAAgB,EAAEC,MAAM,CAACV,IAAP,CAAYH,EAA5D;AACLS,QAAAA,WAAW,EAAED,KAAK,CAACE,SADd;AACyBC,QAAAA,kBAAkB,EAAEH,KAAK,CAACI;AADnD,OAAP;;AAEF,SAAK,eAAL;AACE,aAAO;AAAED,QAAAA,kBAAkB,EAAE,IAAtB;AAA4BF,QAAAA,WAAW,EAAE;AAAzC,OAAP;;AACF,SAAK,aAAL;AACE,aAAO;AAAEG,QAAAA,gBAAgB,EAAE,IAApB;AAA0BF,QAAAA,SAAS,EAAE;AAArC,OAAP;;AACF;AACE,aAAOF,KAAP;AAlBF;AAoBD,CAvBD;;AAiCA,eAAeD,mBAAf","sourcesContent":["\n\nexport const triggerSuccess = (msg, seconds) => {\n\n  return async dispatch => {\n\n    const id = setTimeout(() => {\n      dispatch({ type: 'EMPTY_SUCCESS' })\n    }, seconds * 1000)\n\n    dispatch({ type: 'SET_SUCCESS',\n      data: {\n        msg: msg,\n        id: id\n      }\n    })\n\n  }\n\n}\n\nexport const triggerError = (msg, seconds) => {\n\n  return async dispatch => {\n\n    const id = setTimeout(() => {\n      dispatch({ type: 'EMPTY_ERROR' })\n    }, seconds * 1000)\n\n    dispatch({ type: 'SET_ERROR',\n      data: {\n        msg: msg,\n        id: id\n      }\n    })\n\n  }\n\n}\n\n\nexport const emptySuccess= () => {\n  return {\n    type: 'EMPTY_SUCCESS'\n  }\n}\n\n\nexport const emptyError= () => {\n  return {\n    type: 'EMPTY_ERROR'\n  }\n}\n\n\n\n\n\nconst notificationReducer = (state = { success_msg: 'Initial notification',\n  error_msg: 'Initial notification', success_timeout_id: null, error_timeout_id: null }, action) => {\n  //console.log(\"notificationReducer STATE: \", state, \" ACTION: \", action)\n  switch (action.type) {\n  case 'SET_SUCCESS':\n    if (state.id) {\n      clearTimeout(state.id)\n    }\n    return { success_msg: action.data.msg, success_timeout_id: action.data.id,\n      error_msg: state.error_msg, error_timeout_id: state.error_timeout_id }\n  case 'SET_ERROR':\n    if (state.id) {\n      clearTimeout(state.id)\n    }\n    return { error_msg: action.data.msg, error_timeout_id: action.data.id,\n      success_msg: state.error_msg, success_timeout_id: state.error_timeout_id }\n  case 'EMPTY_SUCCESS':\n    return { success_timeout_id: null, success_msg: '' }\n  case 'EMPTY_ERROR':\n    return { error_timeout_id: null, error_msg: '' }\n  default:\n    return state\n  }\n}\n\n\n\n\n\n\n\n\n\nexport default notificationReducer\n\n\n\n"]},"metadata":{},"sourceType":"module"}